drop table if exists teaches;
drop table if exists section;
drop table if exists instructor_time_conflict;
drop table if exists likely_course_conflicts;
drop table if exists non_instructional_load;
drop table if exists timeslot;
drop table if exists instructor;
drop table if exists course;
create table instructor (first_name varchar(20) not null, last_name varchar(20) not null, email varchar(50) not null, id int(8) not null, desired_load decimal(3,1) not null check (desired_load >= 0), primary key (id), unique key (email));
create table course (course_id varchar(9) not null, department varchar(20) not null, num_credits int(2) not null check (num_credits > 0), title varchar(60) not null, primary key (course_id));
create table section (course_id varchar(9) not null, sec_id int(1) not null check (sec_id >= 0), semester varchar(7) not null check (semester in ('fall', 'interim', 'spring', 'summer')), year int(4) not null, primary key (course_id, sec_id, semester, year), foreign key (course_id) references course (course_id) on delete no action on update cascade);
create table timeslot (mod_slot varchar(1) not null, start_time varchar(5) not null, end_time varchar(5) not null, primary key (mod_slot, start_time, end_time));
create table teaches (id int(8), course_id varchar(9), sec_id int(1) not null, semester varchar(7) not null, year int(4) not null, mod_slot varchar(1) not null, primary key (id, course_id, sec_id, semester, year), foreign key (id) references instructor (id) on delete no action on update cascade, foreign key (course_id, sec_id, semester, year) references section (course_id, sec_id, semester, year) on delete no action on update cascade, foreign key (mod_slot) references timeslot (mod_slot) on delete no action on update cascade);
create table non_instructional_load (id int(8) not null, task varchar(20) not null, teu decimal(3,1) not null check (teu >= 0), semester varchar(7) not null, year int(4) not null, primary key (id, task, semester, year), foreign key (id) references instructor (id) on delete no action on update cascade);
create table instructor_time_conflict (id int(8) not null, mod_slot varchar(1) not null, primary key (id, mod_slot), foreign key (id) references instructor (id) on delete no action on update cascade, foreign key (mod_slot) references timeslot (mod_slot) on delete cascade on update cascade);
create table likely_course_conflicts (course_id varchar(9) not null, cluster_id int(2) not null check (cluster_id > 0), primary key (course_id, cluster_id), foreign key (course_id) references course (course_id) on delete no action on update cascade);